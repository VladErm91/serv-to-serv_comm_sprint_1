apiVersion: v1
kind: Service
metadata:
  name: django-admin-service
spec:
  type: NodePort
  selector:
    app: django-admin
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-admin-deployment
spec:
  selector: 
    matchLabels:
      app: django-admin
  replicas: 1
  template:
    metadata:
      labels:
        app: django-admin
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z -v -w30 $DB_HOST $DB_PORT; do echo "Waiting for database..."; sleep 5; done']
          envFrom:
            - secretRef:
                name: api-movie-env
      containers:
        - name: django-admin
          image: rikhoff/movies_admin:latest
          volumeMounts:
            - mountPath: "/data/static"
              name: staticfiles
      volumes:
        - name: staticfiles
          persistentVolumeClaim:
            claimName: staticfiles-pvc
      containers:
        - name: django-admin
          image: rikhoff/movies_admin:latest
          envFrom:
            - secretRef:
                name: api-movie-env
          resources:
            limits: 
              memory: "400Mi"
          ports:
            - containerPort: 8081
          livenessProbe:
            httpGet:
              path: "/admin"
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 5
          volumeMounts:
            - mountPath: "/data/static"
              name: staticfiles
---

apiVersion: batch/v1
kind: Job
metadata:
  name: django-admin-migrations
spec:
  backoffLimit: 2
  #ttlSecondsAfterFinished: 100
  activeDeadlineSeconds: 100000000
  template:
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z -v -w30 $DB_HOST $DB_PORT; do echo "Waiting for database..."; sleep 5; done']
          envFrom:
            - secretRef:
                name: api-movie-env
      containers:
      - name: django-admin
        image: rikhoff/movies_admin:latest
        command: ["/bin/sh", "-c", "python ./manage.py migrate" ]
        imagePullPolicy: Never
        envFrom:
          - secretRef:
              name: api-movie-env
      restartPolicy: Never
---