services:
# ---- kafka web api ----
  flask-kafka-web:
    build:
      context: ./flask_kafka_app
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - .env
    restart: always
    depends_on:
        zookeeper:
          condition: service_started
        kafka-0:
          condition: service_healthy

# ---- сервис zookeeper ----
  zookeeper:
    image: zookeeper:3.8
    restart: on-failure
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

# ---- сервис kafka ----
  kafka-0:
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    healthcheck:
      test: "exit 0"
    volumes:
      - kafka_0_data:/bitnami/kafka

  ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft 

# ---- сервис clickhouse ----
  clickhouse-node1:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    volumes:
      - ./kafka_to_clickhouse_etl/data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper
    ports:
      - "8123:8123"
      - "9002:9002"

  clickhouse-node2:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./kafka_to_clickhouse_etl/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./kafka_to_clickhouse_etl/data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./kafka_to_clickhouse_etl/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

# ---- сервис etl kafka to clickhouse ----
  etl_service:
    build: ./kafka_to_clickhouse_etl/
    restart: always
    env_file:
      - .env
    depends_on:
      - kafka-0
      - flask-kafka-web
      - clickhouse-node1

volumes:
  kafka_0_data: